
DROP TABLE TB_MEMBER;
DROP TABLE TB_PER_REV;
DROP TABLE TB_STUDYGROUP;
DROP TABLE TB_MEMBER;
DROP TABLE TB_MEMBER;
DROP TABLE TB_MEMBER;

CREATE TABLE TB_MEMBER ( --멤버 테이블 생성
  MEMBER_NO NUMBER,
  GROUP_NO NUMBER ,
  ID VARCHAR2(20) NOT NULL UNIQUE,
  NAME VARCHAR2(10) NOT NULL,
  AGE NUMBER NOT NULL,
  ACADEMY_NAME VARCHAR2(20) NOT NULL,
  WEIGHT NUMBER DEFAULT 0,
  STUDENT_NO NUMBER NOT NULL UNIQUE
);


-- 멤버(TB_MEMBER) 테이블의 MEMEBR_NO 컬럼에게  기본키(PRIMARY KEY) 제약조건 추가(부여)

ALTER TABLE TB_MEMBER
ADD CONSTRAINT TB_MEMBER_MEMBER_NO_PK 
PRIMARY KEY(MEMBER_NO);    


-- TB_MEMBER 테이블의 GROUP_NO 컬럼 외래키 제약조건 추가(부여)
--(참조하는 컬럼은 TB_STUDYGROUP 테이블의 기본키인 GROUP_NO 컬럼이다.)

ALTER TABLE TB_MEMBER
ADD CONSTRAINT TB_MEMBER_GROUP_NO_FK 
FOREIGN KEY(GROUP_NO) 
REFERENCES TB_STUDYGROUP; 





CREATE TABLE TB_PER_REV(    -- 개인평가 테이블 생성
    REV_NO NUMBER,
    MEMBER_NO NUMBER,
    PENALTY NUMBER DEFAULT 0,
    FOOT_PRINT NUMBER DEFAULT 0
);



-- 개인평가(TB_PER_REV) 테이블의 REV_NO 컬럼에게 기본키(PRIMARY KEY) 제약조건 추가(부여)

ALTER TABLE TB_PER_REV
ADD CONSTRAINT TB_PER_REV_REVIEW_NO_PK 
PRIMARY KEY(REV_NO);


-- 개인평가(TB_PER_REV) 테이블의 MEMBER_NO 컬럼에게 외래키 제약조건 추가(부여)
-- (참조하는 컬럼은 TB_MEMBER 테이블의 기본키인 MEMBER_NO 컬럼이다.)

ALTER TABLE TB_PER_REV
ADD CONSTRAINT TB_PER_REV_MEMBER_NO_FK 
FOREIGN KEY(MEMBER_NO)
REFERENCES TB_MEMBER;



CREATE TABLE TB_STUDYGROUP( -- 스터디 그룹 테이블 생성
    GROUP_NO NUMBER, 
    ACADEMY VARCHAR2(20) NOT NULL, 
    GROUPNAME VARCHAR2(20) NOT NULL UNIQUE, 
    MEMBERCOUNT NUMBER DEFAULT 1
);
​


-- 스터디그룹(TB_STUDYGROUP) 테이블의 GROUP_NO 컬럼에 기본키(PRIMARY KEY) 제약조건 추가(부여)

ALTER TABLE TB_STUDYGROUP
ADD CONSTRAINT TB_STUDYGROUP_GROUP_NO_PK
PRIMARY KEY(GROUP_NO);





CREATE TABLE TB_GROUP_REV(
    GROUP_REV_NO NUMBER,
    GROUP_NO NUMBER,
    MEMBER_NO NUMBER,
    GROUP_SCORE NUMBER,
    REVIEW VARCHAR2(4000),
    FOOT_PRINT VARCHAR2(5),
    PENALTY NUMBER
);


-- 그룹평가(TB_GROUP_REV) 테이블의 GROUP_REV_NO 컬럼에  기본키(PRIMARY KEY) 제약조건 추가(부여)

ALTER TABLE TB_GROUP_REV
ADD CONSTRAINT TB_GROUP_REV_GROUP_REV_NO_PK
PRIMARY KEY(GROUP_REV_NO);


-- 그룹평가(TB_GROUP_REV) 테이블의 GROUP_NO 컬럼에게 외래키 제약조건 추가(부여)
-- (참조하는 컬럼은 TB_STUDYGROUP 테이블의 기본키인 GROUP_NO 컬럼이다.)

ALTER TABLE TB_GROUP_REV
ADD CONSTRAINT TB_GROUP_REV_GROUP_NO_FK
FOREIGN KEY(GROUP_NO
REFERENCES TB_STUDYGROUP;


-- 그룹평가(TB_GROUP_REV) 테이블의 MEMBER_NO 컬럼에게 외래키 제약조건 추가(부여)
-- (참조하는 컬럼은 TB_MEMBER 테이블의 기본키인 MEMBER_NO 컬럼이다.)

ALTER TABLE TB_GROUP_REV
ADD CONSTRAINT TB_GROUP_REV_MEMBER_NO_FK
FOREIGN KEY(MEMBER_NO)
REFERENCES TB_MEMBER;








CREATE TABLE TB_SCHEDULE (  -- 스케줄 테이블 생성
    SCHEDULE_NO NUMBER, -- 스케줄 넘버
    SCHEDULE_TITLE VARCHAR2(20), -- 스케줄 제목
    SCHEDULE_CONTENT VARCHAR2(1000), -- 스케줄 내용
    SCHEDULE_DATE DATE, -- 스케줄 날짜
    GROUP_NO NUMBER, -- 스터디그룹 넘버(외래키 제약조건 걸어야함)
    MEMBER_NO NUMBER -- 멤버 넘버(외래키 제약조건 걸어야함)
);


-- 스케줄(TB_SCHEDULE) 테이블의 SCHEDULE_NO 컬럼에 기본키(PRIMARY KEY) 제약조건 추가(부여)

ALTER TABLE TB_SCHEDULE
ADD CONSTAINT TB_SCHEDULE_SCHEDULE_NO_PK PRIMARY KEY(SCHEDULE_NO);

​
-- 스케줄(TB_SCHEDULE) 테이블의 GROUP_NO 컬럼에게 외래키 제약조건 추가(부여)
-- (참조하는 컬럼은 TB_STUDYGROUP 테이블의 기본키인 GROUP_NO 컬럼이다.)

ALTER TABLE TB_SCHEDULE 
ADD CONSTRAINT TB_SCHEDULE_STUDYGROUP_NO_FK 
FOREIGN KEY(GROUP_NO) 
REFERENCES TB_STUDYGROUP; -- 스터디그룹 테이블 참조



-- 스케줄(TB_SCHEDULE) 테이블의 MEMBER_NO 컬럼에게 외래키 제약조건 추가(부여)
-- (참조하는 컬럼은 TB_MEMBER 테이블의 기본키인 MEMBER_NO 컬럼이다.)

ALTER TABLE TB_SCHEDULE 
ADD CONSTRAINT TB_SCHEDULE_MEMBER_NO_FK 
FOREIGN KEY(MEMBER_NO) 
REFERENCES TB_MEMBER; -- 멤버 테이블 참조






 
 
 
 






 

CREATE TABLE TB_POST(  ​-- 게시물 테이블 생성
    POST_NO NUMBER, --게시물 넘버
    POST_TITLE VARCHAR2(20)NOT NULL, --게시물 이름
    POST_CONTENT VARCHAR2(4000) NOT NULL, --게시물 내용
    CREATETIME DATE DEFAULT SYSDATE, --게시물 작성 날짜
    UPDATETIME DATE DEFAULT SYSDATE, --게시물 수정 날짜
    NICKNAME VARCHAR2(20), --게시물 익명 닉네임
    MEMBER_NO NUMBER --멤버 테이블 FK (변수명 변경하기)
);
​

-- 게시물(TB_POST) 테이블의 POST_NO 컬럼에 기본키(PRIMARY KEY) 제약조건 추가(부여)

ALTER TABLE TB_POST
ADD CONSTRAINT TB_POST_POST_NO_PK
PRIMARY KEY(POST_NO);


-- 스케줄(TB_POST) 테이블의 MEMBER_NO 컬럼에게 외래키 제약조건 추가(부여)
-- (참조하는 컬럼은 TB_MEMBER 테이블의 기본키인 MEMBER_NO 컬럼이다.)

ALTER TABLE TB_POST
ADD CONSTRAINT TB_POST_MEMBER_NO_FK
FOREIGN KEY(MEMBER_NO)
REFERENCES TB_MEMBER;
​
​

CREATE TABLE TB_POST_LIKE( --좋아요 테이블
    LIKE_NO NUMBER, --좋아요 개수
    POST_LIKE_CREATTIME NUMBER, --좋아요 누른 시간
    POST_NO NUMBER, --POST테이블 FK
    MEMBER_NO NUBMER --MEMBER테이블 FK (변수명 변경하기)
);
--시퀀스 생성
CREATE SEQUENCE SEQ_POST_LIKE;
--PK 생성
ALTER TABLE POST_LIKE ADD CONSTRAINT POST_LIKE_NO_PK PRIMARY KEY(POST_NO);
--FK 생성
ALTER TABLE POST_LIKE ADD CONSTRAINT POST_LIKE_PK FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER;
ALTER TABLE POST_LIKE ADD CONSTRAINT POST_LIKE_PK FOREIGN KEY(POST_NO) REFERENCES POST;
​
--
--
--
--
--
--
--
--
--
--
--
--CREATE TABLE TB_POST_COMMENTS( -- 게시물 댓글 테이블
-- CO_NO NUMBER, -- 댓글 SEQ
-- CO_CO_NO NUMBER, -- 대댓글 SEQ
-- MEMMER_NO NUMBER, -- 외래키, 멤버 SEQ
-- COMMENT VARCHAR2(1000), -- 댓글
-- CO_CREATEDATE DATE, -- 댓글작성날짜
-- CO_UPDATEDATE DATE, -- 댓글수정날짜
-- CO_NICKNAME VARCHAR2(20), -- 댓글익명닉네임
-- POST_NUM NUMBER -- 외래키, 게시글 SEQ
-- );
-- 
-- CREATE TABLE TB_POST_LIKE_COMMENTS( -- 좋아요 게시물 댓글 테이블
-- LI_CO_NO NUMBERL, -- 좋아요 댓글 SEQ
-- MEMMER_NO NUMBER, -- 외래키, 멤버 SEQ
-- CO_NO NUMBER, -- 외래키, 댓글 SEQ
-- LI_CO_CREATEDATE DATE -- 좋아요 댓글 누른 시간
-- );
-- 
--  -- pk
-- ALTER TABLE POST_COMMENTS ADD CONSTRAINT CO_NO_PK PRIMARY KEY(CO_NO); -- 게시물 댓글 : 댓글 SEQ 기본키
-- ALTER TABLE POST_LIKE_COMMENTS ADD CONSTRAINT LI_CO_NO_PK PRIMARY KEY(LI_CO_NO); -- 게시물 댓글 좋아요 댓글 : 댓글 SEQ 기본키
-- 
--  -- FK(SEQ_멤버 필요, SEQ_게시물 필요)
-- ALTER TABLE POST_COMMENTS ADD CONSTRAINT POST_COMMENTS_MEMBER_NO_FK FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER; -- 게시글 댓글 : 멤버 SEQ 외래키
-- ALTER TABLE POST_COMMENTS ADD CONSTRAINT POST_COMMENTS_POST_NO_FK FOREIGN KEY(POST_NO) REFERENCES POST; -- 게시글 댓글 : 게시글 SEQ 외래키
-- ALTER TABLE POST_LIKE_COMMENTS ADD CONSTRAINT POST_LIKE_COMMENTS_CO_NO_FK FOREIGN KEY(CO_NO) REFERENCES POST_COMMENTS; -- 게시물 좋아요 댓글 : 댓글 SEQ 외래키
-- ALTER TABLE POST_LIKE_COMMENTS ADD CONSTRAINT POST_LIKE_COMMENTS_MEMBER_NO_FK FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER; -- 게시물 좋아요 댓글 : 멤버 SEQ 외래키
--  
--  -- SEQ 생성
-- CREATE SEQUENCE SEQ_CO_NO; -- 댓글 SEQ
-- CREATE SEQUENCE SEQ_LI_CO_NO; -- 대댓글 SEQ
-- CREATE SEQUENCE SEQ_LI_CO_NO; -- 좋아요 댓글 SEQ
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
-- 
--CREATE SEQUENCE MEMBER_SEQ_SEQ START WITH 1 INCREMENT BY 1;
--CREATE SEQUENCE STUDY_GROUP_SEQ_SEQ START WITH 1 INCREMENT BY 1;
--CREATE SEQUENCE SCHEDULE_SEQ; -- 시퀀스 생성
--시퀀스 생성
--CREATE SEQUENCE SEQ_POST_NO;